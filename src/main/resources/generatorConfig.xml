<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">
<!-- 配置生成器 -->
<generatorConfiguration>
    <!-- 可以用于加载配置项或者配置文件，在整个配置文件中就可以使用${propertyKey}的方式来引用配置项
        resource：配置资源加载地址，使用resource，MBG从classpath开始找，比如com/myproject/generatorConfig.properties
        url：配置资源加载地质，使用URL的方式，比如file:///C:/myfolder/generatorConfig.properties.
        注意，两个属性只能选址一个;

        另外，如果使用了mybatis-generator-maven-plugin，那么在pom.xml中定义的properties都可以直接在generatorConfig.xml中使用
    <properties resource="" url="" />
     -->

    <!-- 在MBG工作的时候，需要额外加载的依赖包
        location属性指明加载jar/zip包的全路径
   <classPathEntry location="/Program Files/IBM/SQLLIB/java/db2java.zip" />
     -->

    <!--
        context:生成一组对象的环境
        id:必选，上下文id，用于在生成错误时提示
        defaultModelType:指定生成对象的样式
         特别说明 我的前面三个都不管用,不知道为啥
            1，conditional：类似hierarchical；
            2，flat：所有内容（主键，blob）等全部生成在一个对象中；
            3，hierarchical：主键生成一个XXKey对象(key class)，Blob等单独生成一个对象，其他简单属性在一个对象中(record class)
        targetRuntime:
            1，MyBatis3：默认的值，生成基于MyBatis3.x以上版本的内容，包括XXXBySample；
            2，MyBatis3Simple：类似MyBatis3，只是不生成XXXBySample；
        introspectedColumnImpl：类全限定名，用于扩展MBG
    -->
    <context id="context1" targetRuntime="MyBatis3">

        <!-- 自动识别数据库关键字，默认false，如果设置为true，根据SqlReservedWords中定义的关键字列表；
            一般保留默认值，遇到数据库关键字（Java关键字），使用columnOverride覆盖
         -->
        <!--注释控制-->
        <commentGenerator>
            <property name="suppressDate" value="true"/>
            <property name="suppressAllComments" value="true"/>
        </commentGenerator>

        <!-- 必须要有的，使用这个配置链接数据库
            @TODO:是否可以扩展
         -->

        <jdbcConnection driverClass="com.mysql.jdbc.Driver"
                        connectionURL="jdbc:mysql://47.102.154.247/rd?autoCommit=true"
                        userId="root"
                        password="123456"/>

        <!-- java模型创建器，是必须要的元素
            负责：1，key类（见context的defaultModelType）；2，java类；3，查询类
            targetPackage：生成的类要放的包，真实的包受enableSubPackages属性控制；
            targetProject：目标项目，指定一个存在的目录下，生成的内容会放到指定目录中，如果目录不存在，MBG不会自动建目录
         -->
        <javaModelGenerator targetPackage="com.cc.rd.entity" targetProject="src/main/java"/>

        <!-- 生成SQL map的XML文件生成器，
            注意，在Mybatis3之后，我们可以使用mapper.xml文件+Mapper接口（或者不用mapper接口），
                或者只使用Mapper接口+Annotation，所以，如果 javaClientGenerator配置中配置了需要生成XML的话，这个元素就必须配置
            targetPackage/targetProject:同javaModelGenerator
         -->
        <sqlMapGenerator targetPackage="mapper" targetProject="src/main/resources">
            <!-- 在targetPackage的基础上，根据数据库的schema再生成一层package，最终生成的类放在这个package下，默认为false -->
            <property name="enableSubPackages" value="true"/>
        </sqlMapGenerator>

        <!-- 对于mybatis来说，即生成Mapper接口，注意，如果没有配置该元素，那么默认不会生成Mapper接口
            targetPackage/targetProject:同javaModelGenerator
            type：选择怎么生成mapper接口（在MyBatis3/MyBatis3Simple下）：
                1，ANNOTATEDMAPPER：会生成使用Mapper接口+Annotation的方式创建（SQL生成在annotation中），不会生成对应的XML；
                2，MIXEDMAPPER：使用混合配置，会生成Mapper接口，并适当添加合适的Annotation，但是XML会生成在XML中；
                3，XMLMAPPER：会生成Mapper接口，接口完全依赖XML；
            注意，如果context是MyBatis3Simple：只支持ANNOTATEDMAPPER和XMLMAPPER
        -->
        <javaClientGenerator targetPackage="com.cc.rd.dao"
                             targetProject="src/main/java"
                             type="XMLMAPPER" />


        <!--<table tableName="file_info">
            <generatedKey column="id" sqlStatement="MySql" identity="true"/>
            <columnOverride column="is_deleted" javaType="java.lang.Boolean"/>
        </table>
        <table tableName="file_data">
            <generatedKey column="id" sqlStatement="MySql" identity="true"/>
        </table>
-->

        <table tableName="order">
            <generatedKey column="id" sqlStatement="MySql" identity="true"/>
            <columnOverride column="is_deleted" javaType="java.lang.Integer"/>
            <columnOverride column="order_type" javaType="java.lang.Integer"/>
            <columnOverride column="order_state" javaType="java.lang.Integer"/>
        </table>


        <!--

        <table tableName="user">
            <generatedKey column="id" sqlStatement="MySql" identity="true"/>
            <columnOverride column="authentication_source" javaType="java.lang.Integer"/>
            <columnOverride column="gender" javaType="java.lang.Integer"/>
            <columnOverride column="is_deleted" javaType="java.lang.Integer"/>
        </table>-->

        <!--<table tableName="order_invitees">
            <generatedKey column="id" sqlStatement="MySql" identity="true"/>
            <columnOverride column="is_deleted" javaType="java.lang.Integer"/>
            <columnOverride column="type" javaType="java.lang.Integer"/>
            <columnOverride column="response_type" javaType="java.lang.Integer"/>
        </table>-->

        <!--<table tableName="shop">
            <generatedKey column="id" sqlStatement="MySql" identity="true"/>
            <columnOverride column="practice" javaType="java.lang.Boolean"/>
            <columnOverride column="is_deleted" javaType="java.lang.Integer"/>
        </table>-->
        <!--

        <table tableName="shop_label">
            <generatedKey column="id" sqlStatement="MySql" identity="true"/>
            <columnOverride column="is_deleted" javaType="java.lang.Integer"/>
        </table>

        <table tableName="label">
            <generatedKey column="id" sqlStatement="MySql" identity="true"/>
            <columnOverride column="is_deleted" javaType="java.lang.Integer"/>
        </table>

        <table tableName="shop_rule">
            <generatedKey column="id" sqlStatement="MySql" identity="true"/>
            <columnOverride column="is_cross" javaType="java.lang.Integer"/>
            <columnOverride column="is_deleted" javaType="java.lang.Integer"/>
        </table>
-->

<!--
        <table tableName="region_country">
            <generatedKey column="id" sqlStatement="MySql" identity="true"/>
        </table>

        <table tableName="region_province">
            <generatedKey column="id" sqlStatement="MySql" identity="true"/>
        </table>

        <table tableName="region_city">
            <generatedKey column="id" sqlStatement="MySql" identity="true"/>
        </table>

        <table tableName="region_area">
            <generatedKey column="id" sqlStatement="MySql" identity="true"/>
        </table>
-->

    </context>

</generatorConfiguration>